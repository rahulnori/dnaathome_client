# Makefile.in generated by automake 1.9.6 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = .

pkgdatadir = $(datadir)/gibbs
pkglibdir = $(libdir)/gibbs
pkgincludedir = $(includedir)/gibbs
top_builddir = .
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /opt/local/bin/ginstall -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-apple-darwin10.3.0
host_triplet = i686-apple-darwin10.3.0
target_triplet = i686-apple-darwin10.3.0
LIBOBJDIR =
bin_PROGRAMS = Gibbs$(EXEEXT)
DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/configure ChangeLog \
	INSTALL compile config.guess config.sub depcomp install-sh \
	missing
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno configure.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am__Gibbs_SOURCES_DIST = Gibbs.c Gibbs.h Gibbs_NON_GUI.c \
	Gibbs_NON_GUI.h calcstats.c calcstats.h centroid.c centroid.h \
	column.c column.h common.c common.h counts.c counts.h \
	expectmax.c expectmax.h fragadj.c fragadj.h fragment.c \
	fragment.h freqbkgnd.c freqbkgnd.h initseq.c initseq.h \
	karlin.c karlin.h maximize.c maximize.h mem_mgmt.c mem_mgmt.h \
	motif.c motif.h motifsamp.c motifsamp.h nearopt.c nearopt.h \
	parameters.c parameters.h printdata.c printdata.h \
	probability.c probability.h process.c process.h sampling.c \
	sampling.h sitesamp.c sitesamp.h subopt.c subopt.h width.c \
	width.h wilcoxon.c wilcoxon.h perror.c perror.h recur.c \
	recur.h rsample.c rsample.h prior.c prior.h motifpair.c \
	motifpair.h footprint.c footprint.h exchange.c exchange.h \
	groupsampler.c groupsampler.h weights.c weights.h trans.c \
	trans.h position.c position.h seqmap.c seqmap.h phyllip.c \
	phyllip.h fels.c fels.h impsamp.c impsamp.h rgamma.c rgamma.h \
	model.c model.h bayes.c bayes.h blosum.h species_sample.c \
	species_sample.h gibbsmpi.c gibbsmpi.h hier.c hier.h \
	digammal.c digammal.h
#am__objects_1 = Gibbs-gibbsmpi.$(OBJEXT) \
#	Gibbs-hier.$(OBJEXT) Gibbs-digammal.$(OBJEXT)
am_Gibbs_OBJECTS = Gibbs-Gibbs.$(OBJEXT) Gibbs-Gibbs_NON_GUI.$(OBJEXT) \
	Gibbs-calcstats.$(OBJEXT) Gibbs-centroid.$(OBJEXT) \
	Gibbs-column.$(OBJEXT) Gibbs-common.$(OBJEXT) \
	Gibbs-counts.$(OBJEXT) Gibbs-expectmax.$(OBJEXT) \
	Gibbs-fragadj.$(OBJEXT) Gibbs-fragment.$(OBJEXT) \
	Gibbs-freqbkgnd.$(OBJEXT) Gibbs-initseq.$(OBJEXT) \
	Gibbs-karlin.$(OBJEXT) Gibbs-maximize.$(OBJEXT) \
	Gibbs-mem_mgmt.$(OBJEXT) Gibbs-motif.$(OBJEXT) \
	Gibbs-motifsamp.$(OBJEXT) Gibbs-nearopt.$(OBJEXT) \
	Gibbs-parameters.$(OBJEXT) Gibbs-printdata.$(OBJEXT) \
	Gibbs-probability.$(OBJEXT) Gibbs-process.$(OBJEXT) \
	Gibbs-sampling.$(OBJEXT) Gibbs-sitesamp.$(OBJEXT) \
	Gibbs-subopt.$(OBJEXT) Gibbs-width.$(OBJEXT) \
	Gibbs-wilcoxon.$(OBJEXT) Gibbs-perror.$(OBJEXT) \
	Gibbs-recur.$(OBJEXT) Gibbs-rsample.$(OBJEXT) \
	Gibbs-prior.$(OBJEXT) Gibbs-motifpair.$(OBJEXT) \
	Gibbs-footprint.$(OBJEXT) Gibbs-exchange.$(OBJEXT) \
	Gibbs-groupsampler.$(OBJEXT) Gibbs-weights.$(OBJEXT) \
	Gibbs-trans.$(OBJEXT) Gibbs-position.$(OBJEXT) \
	Gibbs-seqmap.$(OBJEXT) Gibbs-phyllip.$(OBJEXT) \
	Gibbs-fels.$(OBJEXT) Gibbs-impsamp.$(OBJEXT) \
	Gibbs-rgamma.$(OBJEXT) Gibbs-model.$(OBJEXT) \
	Gibbs-bayes.$(OBJEXT) Gibbs-species_sample.$(OBJEXT) \
	$(am__objects_1)
Gibbs_OBJECTS = $(am_Gibbs_OBJECTS)
#am__DEPENDENCIES_1 = libml.a
am__DEPENDENCIES_2 =
Gibbs_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_2)
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(Gibbs_SOURCES)
DIST_SOURCES = $(am__Gibbs_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /Users/deselt/Software/gibbs-3.1/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /Users/deselt/Software/gibbs-3.1/missing --run tar
AUTOCONF = ${SHELL} /Users/deselt/Software/gibbs-3.1/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/deselt/Software/gibbs-3.1/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/deselt/Software/gibbs-3.1/missing --run automake-1.9
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -O3   -Wall -Werror
CPPFLAGS = 
CYGPATH_W = echo
CYGWIN_FALSE = 
CYGWIN_TRUE = #
DEFS = -DPACKAGE_NAME=\"Gibbs\" -DPACKAGE_TARNAME=\"gibbs\" -DPACKAGE_VERSION=\"3.1\" -DPACKAGE_STRING=\"Gibbs\ 3.1\" -DPACKAGE_BUGREPORT=\"gibbs@brown.edu\" -DPACKAGE=\"gibbs\" -DVERSION=\"3.1\"
DEPDIR = .deps
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EXEEXT = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /Users/deselt/Software/gibbs-3.1/missing --run makeinfo
MPI_FALSE = 
MPI_TRUE = #
OBJEXT = o
PACKAGE = gibbs
PACKAGE_BUGREPORT = gibbs@brown.edu
PACKAGE_NAME = Gibbs
PACKAGE_STRING = Gibbs 3.1
PACKAGE_TARNAME = gibbs
PACKAGE_VERSION = 3.1
PATH_SEPARATOR = :
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
SUNMATH_FALSE = 
SUNMATH_TRUE = #
VERSION = 3.1
ac_ct_CC = gcc
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-apple-darwin10.3.0
build_alias = 
build_cpu = i686
build_os = darwin10.3.0
build_vendor = apple
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-apple-darwin10.3.0
host_alias = 
host_cpu = i686
host_os = darwin10.3.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /Users/deselt/Software/gibbs-3.1/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(install_sh) -d
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = i686-apple-darwin10.3.0
target_alias = 
target_cpu = i686
target_os = darwin10.3.0
target_vendor = apple
EXTRA_DIST = libml.a gibbsmpi.c gibbsmpi.h hier.c hier.h digammal.c digammal.h gpl.license.txt NonGUI.nompi.inc make.default hum.mouse.pr Gibbs.linux seq.weights.pl calc.nmer.prob.pl
LDADD = -lm
#LDADD = libml.a -lm
Gibbs_CFLAGS = 
#Gibbs_CFLAGS = -malign-double -D_CYGWIN_
SRC = 
#SRC = gibbsmpi.c gibbsmpi.h hier.c hier.h digammal.c digammal.h
MPILDADD = 
#MPILDADD = -lmpe
SUNLDADD = 
#SUNLDADD = -lsunmath
Gibbs_LDADD = ${LDADD} ${MPILDADD} ${SUNLDADD}
Gibbs_SOURCES = Gibbs.c Gibbs.h Gibbs_NON_GUI.c Gibbs_NON_GUI.h calcstats.c calcstats.h centroid.c centroid.h column.c column.h common.c common.h counts.c counts.h expectmax.c expectmax.h fragadj.c fragadj.h fragment.c fragment.h freqbkgnd.c freqbkgnd.h initseq.c initseq.h karlin.c karlin.h maximize.c maximize.h mem_mgmt.c mem_mgmt.h motif.c motif.h motifsamp.c motifsamp.h nearopt.c nearopt.h parameters.c parameters.h printdata.c printdata.h probability.c probability.h process.c process.h sampling.c sampling.h sitesamp.c sitesamp.h subopt.c subopt.h width.c width.h wilcoxon.c wilcoxon.h perror.c perror.h recur.c recur.h rsample.c rsample.h prior.c prior.h motifpair.c motifpair.h footprint.c footprint.h exchange.c exchange.h groupsampler.c groupsampler.h weights.c weights.h trans.c trans.h position.c position.h seqmap.c seqmap.h phyllip.c phyllip.h fels.c fels.h impsamp.c impsamp.h rgamma.c rgamma.h model.c model.h bayes.c bayes.h blosum.h species_sample.c species_sample.h ${SRC}
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign '; \
	      cd $(srcdir) && $(AUTOMAKE) --foreign  \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
Gibbs$(EXEEXT): $(Gibbs_OBJECTS) $(Gibbs_DEPENDENCIES) 
	@rm -f Gibbs$(EXEEXT)
	$(LINK) $(Gibbs_LDFLAGS) $(Gibbs_OBJECTS) $(Gibbs_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/Gibbs-Gibbs.Po
include ./$(DEPDIR)/Gibbs-Gibbs_NON_GUI.Po
include ./$(DEPDIR)/Gibbs-bayes.Po
include ./$(DEPDIR)/Gibbs-calcstats.Po
include ./$(DEPDIR)/Gibbs-centroid.Po
include ./$(DEPDIR)/Gibbs-column.Po
include ./$(DEPDIR)/Gibbs-common.Po
include ./$(DEPDIR)/Gibbs-counts.Po
include ./$(DEPDIR)/Gibbs-digammal.Po
include ./$(DEPDIR)/Gibbs-exchange.Po
include ./$(DEPDIR)/Gibbs-expectmax.Po
include ./$(DEPDIR)/Gibbs-fels.Po
include ./$(DEPDIR)/Gibbs-footprint.Po
include ./$(DEPDIR)/Gibbs-fragadj.Po
include ./$(DEPDIR)/Gibbs-fragment.Po
include ./$(DEPDIR)/Gibbs-freqbkgnd.Po
include ./$(DEPDIR)/Gibbs-gibbsmpi.Po
include ./$(DEPDIR)/Gibbs-groupsampler.Po
include ./$(DEPDIR)/Gibbs-hier.Po
include ./$(DEPDIR)/Gibbs-impsamp.Po
include ./$(DEPDIR)/Gibbs-initseq.Po
include ./$(DEPDIR)/Gibbs-karlin.Po
include ./$(DEPDIR)/Gibbs-maximize.Po
include ./$(DEPDIR)/Gibbs-mem_mgmt.Po
include ./$(DEPDIR)/Gibbs-model.Po
include ./$(DEPDIR)/Gibbs-motif.Po
include ./$(DEPDIR)/Gibbs-motifpair.Po
include ./$(DEPDIR)/Gibbs-motifsamp.Po
include ./$(DEPDIR)/Gibbs-nearopt.Po
include ./$(DEPDIR)/Gibbs-parameters.Po
include ./$(DEPDIR)/Gibbs-perror.Po
include ./$(DEPDIR)/Gibbs-phyllip.Po
include ./$(DEPDIR)/Gibbs-position.Po
include ./$(DEPDIR)/Gibbs-printdata.Po
include ./$(DEPDIR)/Gibbs-prior.Po
include ./$(DEPDIR)/Gibbs-probability.Po
include ./$(DEPDIR)/Gibbs-process.Po
include ./$(DEPDIR)/Gibbs-recur.Po
include ./$(DEPDIR)/Gibbs-rgamma.Po
include ./$(DEPDIR)/Gibbs-rsample.Po
include ./$(DEPDIR)/Gibbs-sampling.Po
include ./$(DEPDIR)/Gibbs-seqmap.Po
include ./$(DEPDIR)/Gibbs-sitesamp.Po
include ./$(DEPDIR)/Gibbs-species_sample.Po
include ./$(DEPDIR)/Gibbs-subopt.Po
include ./$(DEPDIR)/Gibbs-trans.Po
include ./$(DEPDIR)/Gibbs-weights.Po
include ./$(DEPDIR)/Gibbs-width.Po
include ./$(DEPDIR)/Gibbs-wilcoxon.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

Gibbs-Gibbs.o: Gibbs.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-Gibbs.o -MD -MP -MF "$(DEPDIR)/Gibbs-Gibbs.Tpo" -c -o Gibbs-Gibbs.o `test -f 'Gibbs.c' || echo '$(srcdir)/'`Gibbs.c; \
	then mv -f "$(DEPDIR)/Gibbs-Gibbs.Tpo" "$(DEPDIR)/Gibbs-Gibbs.Po"; else rm -f "$(DEPDIR)/Gibbs-Gibbs.Tpo"; exit 1; fi
#	source='Gibbs.c' object='Gibbs-Gibbs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-Gibbs.o `test -f 'Gibbs.c' || echo '$(srcdir)/'`Gibbs.c

Gibbs-Gibbs.obj: Gibbs.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-Gibbs.obj -MD -MP -MF "$(DEPDIR)/Gibbs-Gibbs.Tpo" -c -o Gibbs-Gibbs.obj `if test -f 'Gibbs.c'; then $(CYGPATH_W) 'Gibbs.c'; else $(CYGPATH_W) '$(srcdir)/Gibbs.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-Gibbs.Tpo" "$(DEPDIR)/Gibbs-Gibbs.Po"; else rm -f "$(DEPDIR)/Gibbs-Gibbs.Tpo"; exit 1; fi
#	source='Gibbs.c' object='Gibbs-Gibbs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-Gibbs.obj `if test -f 'Gibbs.c'; then $(CYGPATH_W) 'Gibbs.c'; else $(CYGPATH_W) '$(srcdir)/Gibbs.c'; fi`

Gibbs-Gibbs_NON_GUI.o: Gibbs_NON_GUI.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-Gibbs_NON_GUI.o -MD -MP -MF "$(DEPDIR)/Gibbs-Gibbs_NON_GUI.Tpo" -c -o Gibbs-Gibbs_NON_GUI.o `test -f 'Gibbs_NON_GUI.c' || echo '$(srcdir)/'`Gibbs_NON_GUI.c; \
	then mv -f "$(DEPDIR)/Gibbs-Gibbs_NON_GUI.Tpo" "$(DEPDIR)/Gibbs-Gibbs_NON_GUI.Po"; else rm -f "$(DEPDIR)/Gibbs-Gibbs_NON_GUI.Tpo"; exit 1; fi
#	source='Gibbs_NON_GUI.c' object='Gibbs-Gibbs_NON_GUI.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-Gibbs_NON_GUI.o `test -f 'Gibbs_NON_GUI.c' || echo '$(srcdir)/'`Gibbs_NON_GUI.c

Gibbs-Gibbs_NON_GUI.obj: Gibbs_NON_GUI.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-Gibbs_NON_GUI.obj -MD -MP -MF "$(DEPDIR)/Gibbs-Gibbs_NON_GUI.Tpo" -c -o Gibbs-Gibbs_NON_GUI.obj `if test -f 'Gibbs_NON_GUI.c'; then $(CYGPATH_W) 'Gibbs_NON_GUI.c'; else $(CYGPATH_W) '$(srcdir)/Gibbs_NON_GUI.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-Gibbs_NON_GUI.Tpo" "$(DEPDIR)/Gibbs-Gibbs_NON_GUI.Po"; else rm -f "$(DEPDIR)/Gibbs-Gibbs_NON_GUI.Tpo"; exit 1; fi
#	source='Gibbs_NON_GUI.c' object='Gibbs-Gibbs_NON_GUI.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-Gibbs_NON_GUI.obj `if test -f 'Gibbs_NON_GUI.c'; then $(CYGPATH_W) 'Gibbs_NON_GUI.c'; else $(CYGPATH_W) '$(srcdir)/Gibbs_NON_GUI.c'; fi`

Gibbs-calcstats.o: calcstats.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-calcstats.o -MD -MP -MF "$(DEPDIR)/Gibbs-calcstats.Tpo" -c -o Gibbs-calcstats.o `test -f 'calcstats.c' || echo '$(srcdir)/'`calcstats.c; \
	then mv -f "$(DEPDIR)/Gibbs-calcstats.Tpo" "$(DEPDIR)/Gibbs-calcstats.Po"; else rm -f "$(DEPDIR)/Gibbs-calcstats.Tpo"; exit 1; fi
#	source='calcstats.c' object='Gibbs-calcstats.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-calcstats.o `test -f 'calcstats.c' || echo '$(srcdir)/'`calcstats.c

Gibbs-calcstats.obj: calcstats.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-calcstats.obj -MD -MP -MF "$(DEPDIR)/Gibbs-calcstats.Tpo" -c -o Gibbs-calcstats.obj `if test -f 'calcstats.c'; then $(CYGPATH_W) 'calcstats.c'; else $(CYGPATH_W) '$(srcdir)/calcstats.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-calcstats.Tpo" "$(DEPDIR)/Gibbs-calcstats.Po"; else rm -f "$(DEPDIR)/Gibbs-calcstats.Tpo"; exit 1; fi
#	source='calcstats.c' object='Gibbs-calcstats.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-calcstats.obj `if test -f 'calcstats.c'; then $(CYGPATH_W) 'calcstats.c'; else $(CYGPATH_W) '$(srcdir)/calcstats.c'; fi`

Gibbs-centroid.o: centroid.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-centroid.o -MD -MP -MF "$(DEPDIR)/Gibbs-centroid.Tpo" -c -o Gibbs-centroid.o `test -f 'centroid.c' || echo '$(srcdir)/'`centroid.c; \
	then mv -f "$(DEPDIR)/Gibbs-centroid.Tpo" "$(DEPDIR)/Gibbs-centroid.Po"; else rm -f "$(DEPDIR)/Gibbs-centroid.Tpo"; exit 1; fi
#	source='centroid.c' object='Gibbs-centroid.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-centroid.o `test -f 'centroid.c' || echo '$(srcdir)/'`centroid.c

Gibbs-centroid.obj: centroid.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-centroid.obj -MD -MP -MF "$(DEPDIR)/Gibbs-centroid.Tpo" -c -o Gibbs-centroid.obj `if test -f 'centroid.c'; then $(CYGPATH_W) 'centroid.c'; else $(CYGPATH_W) '$(srcdir)/centroid.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-centroid.Tpo" "$(DEPDIR)/Gibbs-centroid.Po"; else rm -f "$(DEPDIR)/Gibbs-centroid.Tpo"; exit 1; fi
#	source='centroid.c' object='Gibbs-centroid.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-centroid.obj `if test -f 'centroid.c'; then $(CYGPATH_W) 'centroid.c'; else $(CYGPATH_W) '$(srcdir)/centroid.c'; fi`

Gibbs-column.o: column.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-column.o -MD -MP -MF "$(DEPDIR)/Gibbs-column.Tpo" -c -o Gibbs-column.o `test -f 'column.c' || echo '$(srcdir)/'`column.c; \
	then mv -f "$(DEPDIR)/Gibbs-column.Tpo" "$(DEPDIR)/Gibbs-column.Po"; else rm -f "$(DEPDIR)/Gibbs-column.Tpo"; exit 1; fi
#	source='column.c' object='Gibbs-column.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-column.o `test -f 'column.c' || echo '$(srcdir)/'`column.c

Gibbs-column.obj: column.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-column.obj -MD -MP -MF "$(DEPDIR)/Gibbs-column.Tpo" -c -o Gibbs-column.obj `if test -f 'column.c'; then $(CYGPATH_W) 'column.c'; else $(CYGPATH_W) '$(srcdir)/column.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-column.Tpo" "$(DEPDIR)/Gibbs-column.Po"; else rm -f "$(DEPDIR)/Gibbs-column.Tpo"; exit 1; fi
#	source='column.c' object='Gibbs-column.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-column.obj `if test -f 'column.c'; then $(CYGPATH_W) 'column.c'; else $(CYGPATH_W) '$(srcdir)/column.c'; fi`

Gibbs-common.o: common.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-common.o -MD -MP -MF "$(DEPDIR)/Gibbs-common.Tpo" -c -o Gibbs-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c; \
	then mv -f "$(DEPDIR)/Gibbs-common.Tpo" "$(DEPDIR)/Gibbs-common.Po"; else rm -f "$(DEPDIR)/Gibbs-common.Tpo"; exit 1; fi
#	source='common.c' object='Gibbs-common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c

Gibbs-common.obj: common.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-common.obj -MD -MP -MF "$(DEPDIR)/Gibbs-common.Tpo" -c -o Gibbs-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-common.Tpo" "$(DEPDIR)/Gibbs-common.Po"; else rm -f "$(DEPDIR)/Gibbs-common.Tpo"; exit 1; fi
#	source='common.c' object='Gibbs-common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`

Gibbs-counts.o: counts.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-counts.o -MD -MP -MF "$(DEPDIR)/Gibbs-counts.Tpo" -c -o Gibbs-counts.o `test -f 'counts.c' || echo '$(srcdir)/'`counts.c; \
	then mv -f "$(DEPDIR)/Gibbs-counts.Tpo" "$(DEPDIR)/Gibbs-counts.Po"; else rm -f "$(DEPDIR)/Gibbs-counts.Tpo"; exit 1; fi
#	source='counts.c' object='Gibbs-counts.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-counts.o `test -f 'counts.c' || echo '$(srcdir)/'`counts.c

Gibbs-counts.obj: counts.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-counts.obj -MD -MP -MF "$(DEPDIR)/Gibbs-counts.Tpo" -c -o Gibbs-counts.obj `if test -f 'counts.c'; then $(CYGPATH_W) 'counts.c'; else $(CYGPATH_W) '$(srcdir)/counts.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-counts.Tpo" "$(DEPDIR)/Gibbs-counts.Po"; else rm -f "$(DEPDIR)/Gibbs-counts.Tpo"; exit 1; fi
#	source='counts.c' object='Gibbs-counts.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-counts.obj `if test -f 'counts.c'; then $(CYGPATH_W) 'counts.c'; else $(CYGPATH_W) '$(srcdir)/counts.c'; fi`

Gibbs-expectmax.o: expectmax.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-expectmax.o -MD -MP -MF "$(DEPDIR)/Gibbs-expectmax.Tpo" -c -o Gibbs-expectmax.o `test -f 'expectmax.c' || echo '$(srcdir)/'`expectmax.c; \
	then mv -f "$(DEPDIR)/Gibbs-expectmax.Tpo" "$(DEPDIR)/Gibbs-expectmax.Po"; else rm -f "$(DEPDIR)/Gibbs-expectmax.Tpo"; exit 1; fi
#	source='expectmax.c' object='Gibbs-expectmax.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-expectmax.o `test -f 'expectmax.c' || echo '$(srcdir)/'`expectmax.c

Gibbs-expectmax.obj: expectmax.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-expectmax.obj -MD -MP -MF "$(DEPDIR)/Gibbs-expectmax.Tpo" -c -o Gibbs-expectmax.obj `if test -f 'expectmax.c'; then $(CYGPATH_W) 'expectmax.c'; else $(CYGPATH_W) '$(srcdir)/expectmax.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-expectmax.Tpo" "$(DEPDIR)/Gibbs-expectmax.Po"; else rm -f "$(DEPDIR)/Gibbs-expectmax.Tpo"; exit 1; fi
#	source='expectmax.c' object='Gibbs-expectmax.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-expectmax.obj `if test -f 'expectmax.c'; then $(CYGPATH_W) 'expectmax.c'; else $(CYGPATH_W) '$(srcdir)/expectmax.c'; fi`

Gibbs-fragadj.o: fragadj.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-fragadj.o -MD -MP -MF "$(DEPDIR)/Gibbs-fragadj.Tpo" -c -o Gibbs-fragadj.o `test -f 'fragadj.c' || echo '$(srcdir)/'`fragadj.c; \
	then mv -f "$(DEPDIR)/Gibbs-fragadj.Tpo" "$(DEPDIR)/Gibbs-fragadj.Po"; else rm -f "$(DEPDIR)/Gibbs-fragadj.Tpo"; exit 1; fi
#	source='fragadj.c' object='Gibbs-fragadj.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-fragadj.o `test -f 'fragadj.c' || echo '$(srcdir)/'`fragadj.c

Gibbs-fragadj.obj: fragadj.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-fragadj.obj -MD -MP -MF "$(DEPDIR)/Gibbs-fragadj.Tpo" -c -o Gibbs-fragadj.obj `if test -f 'fragadj.c'; then $(CYGPATH_W) 'fragadj.c'; else $(CYGPATH_W) '$(srcdir)/fragadj.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-fragadj.Tpo" "$(DEPDIR)/Gibbs-fragadj.Po"; else rm -f "$(DEPDIR)/Gibbs-fragadj.Tpo"; exit 1; fi
#	source='fragadj.c' object='Gibbs-fragadj.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-fragadj.obj `if test -f 'fragadj.c'; then $(CYGPATH_W) 'fragadj.c'; else $(CYGPATH_W) '$(srcdir)/fragadj.c'; fi`

Gibbs-fragment.o: fragment.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-fragment.o -MD -MP -MF "$(DEPDIR)/Gibbs-fragment.Tpo" -c -o Gibbs-fragment.o `test -f 'fragment.c' || echo '$(srcdir)/'`fragment.c; \
	then mv -f "$(DEPDIR)/Gibbs-fragment.Tpo" "$(DEPDIR)/Gibbs-fragment.Po"; else rm -f "$(DEPDIR)/Gibbs-fragment.Tpo"; exit 1; fi
#	source='fragment.c' object='Gibbs-fragment.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-fragment.o `test -f 'fragment.c' || echo '$(srcdir)/'`fragment.c

Gibbs-fragment.obj: fragment.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-fragment.obj -MD -MP -MF "$(DEPDIR)/Gibbs-fragment.Tpo" -c -o Gibbs-fragment.obj `if test -f 'fragment.c'; then $(CYGPATH_W) 'fragment.c'; else $(CYGPATH_W) '$(srcdir)/fragment.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-fragment.Tpo" "$(DEPDIR)/Gibbs-fragment.Po"; else rm -f "$(DEPDIR)/Gibbs-fragment.Tpo"; exit 1; fi
#	source='fragment.c' object='Gibbs-fragment.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-fragment.obj `if test -f 'fragment.c'; then $(CYGPATH_W) 'fragment.c'; else $(CYGPATH_W) '$(srcdir)/fragment.c'; fi`

Gibbs-freqbkgnd.o: freqbkgnd.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-freqbkgnd.o -MD -MP -MF "$(DEPDIR)/Gibbs-freqbkgnd.Tpo" -c -o Gibbs-freqbkgnd.o `test -f 'freqbkgnd.c' || echo '$(srcdir)/'`freqbkgnd.c; \
	then mv -f "$(DEPDIR)/Gibbs-freqbkgnd.Tpo" "$(DEPDIR)/Gibbs-freqbkgnd.Po"; else rm -f "$(DEPDIR)/Gibbs-freqbkgnd.Tpo"; exit 1; fi
#	source='freqbkgnd.c' object='Gibbs-freqbkgnd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-freqbkgnd.o `test -f 'freqbkgnd.c' || echo '$(srcdir)/'`freqbkgnd.c

Gibbs-freqbkgnd.obj: freqbkgnd.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-freqbkgnd.obj -MD -MP -MF "$(DEPDIR)/Gibbs-freqbkgnd.Tpo" -c -o Gibbs-freqbkgnd.obj `if test -f 'freqbkgnd.c'; then $(CYGPATH_W) 'freqbkgnd.c'; else $(CYGPATH_W) '$(srcdir)/freqbkgnd.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-freqbkgnd.Tpo" "$(DEPDIR)/Gibbs-freqbkgnd.Po"; else rm -f "$(DEPDIR)/Gibbs-freqbkgnd.Tpo"; exit 1; fi
#	source='freqbkgnd.c' object='Gibbs-freqbkgnd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-freqbkgnd.obj `if test -f 'freqbkgnd.c'; then $(CYGPATH_W) 'freqbkgnd.c'; else $(CYGPATH_W) '$(srcdir)/freqbkgnd.c'; fi`

Gibbs-initseq.o: initseq.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-initseq.o -MD -MP -MF "$(DEPDIR)/Gibbs-initseq.Tpo" -c -o Gibbs-initseq.o `test -f 'initseq.c' || echo '$(srcdir)/'`initseq.c; \
	then mv -f "$(DEPDIR)/Gibbs-initseq.Tpo" "$(DEPDIR)/Gibbs-initseq.Po"; else rm -f "$(DEPDIR)/Gibbs-initseq.Tpo"; exit 1; fi
#	source='initseq.c' object='Gibbs-initseq.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-initseq.o `test -f 'initseq.c' || echo '$(srcdir)/'`initseq.c

Gibbs-initseq.obj: initseq.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-initseq.obj -MD -MP -MF "$(DEPDIR)/Gibbs-initseq.Tpo" -c -o Gibbs-initseq.obj `if test -f 'initseq.c'; then $(CYGPATH_W) 'initseq.c'; else $(CYGPATH_W) '$(srcdir)/initseq.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-initseq.Tpo" "$(DEPDIR)/Gibbs-initseq.Po"; else rm -f "$(DEPDIR)/Gibbs-initseq.Tpo"; exit 1; fi
#	source='initseq.c' object='Gibbs-initseq.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-initseq.obj `if test -f 'initseq.c'; then $(CYGPATH_W) 'initseq.c'; else $(CYGPATH_W) '$(srcdir)/initseq.c'; fi`

Gibbs-karlin.o: karlin.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-karlin.o -MD -MP -MF "$(DEPDIR)/Gibbs-karlin.Tpo" -c -o Gibbs-karlin.o `test -f 'karlin.c' || echo '$(srcdir)/'`karlin.c; \
	then mv -f "$(DEPDIR)/Gibbs-karlin.Tpo" "$(DEPDIR)/Gibbs-karlin.Po"; else rm -f "$(DEPDIR)/Gibbs-karlin.Tpo"; exit 1; fi
#	source='karlin.c' object='Gibbs-karlin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-karlin.o `test -f 'karlin.c' || echo '$(srcdir)/'`karlin.c

Gibbs-karlin.obj: karlin.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-karlin.obj -MD -MP -MF "$(DEPDIR)/Gibbs-karlin.Tpo" -c -o Gibbs-karlin.obj `if test -f 'karlin.c'; then $(CYGPATH_W) 'karlin.c'; else $(CYGPATH_W) '$(srcdir)/karlin.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-karlin.Tpo" "$(DEPDIR)/Gibbs-karlin.Po"; else rm -f "$(DEPDIR)/Gibbs-karlin.Tpo"; exit 1; fi
#	source='karlin.c' object='Gibbs-karlin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-karlin.obj `if test -f 'karlin.c'; then $(CYGPATH_W) 'karlin.c'; else $(CYGPATH_W) '$(srcdir)/karlin.c'; fi`

Gibbs-maximize.o: maximize.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-maximize.o -MD -MP -MF "$(DEPDIR)/Gibbs-maximize.Tpo" -c -o Gibbs-maximize.o `test -f 'maximize.c' || echo '$(srcdir)/'`maximize.c; \
	then mv -f "$(DEPDIR)/Gibbs-maximize.Tpo" "$(DEPDIR)/Gibbs-maximize.Po"; else rm -f "$(DEPDIR)/Gibbs-maximize.Tpo"; exit 1; fi
#	source='maximize.c' object='Gibbs-maximize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-maximize.o `test -f 'maximize.c' || echo '$(srcdir)/'`maximize.c

Gibbs-maximize.obj: maximize.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-maximize.obj -MD -MP -MF "$(DEPDIR)/Gibbs-maximize.Tpo" -c -o Gibbs-maximize.obj `if test -f 'maximize.c'; then $(CYGPATH_W) 'maximize.c'; else $(CYGPATH_W) '$(srcdir)/maximize.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-maximize.Tpo" "$(DEPDIR)/Gibbs-maximize.Po"; else rm -f "$(DEPDIR)/Gibbs-maximize.Tpo"; exit 1; fi
#	source='maximize.c' object='Gibbs-maximize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-maximize.obj `if test -f 'maximize.c'; then $(CYGPATH_W) 'maximize.c'; else $(CYGPATH_W) '$(srcdir)/maximize.c'; fi`

Gibbs-mem_mgmt.o: mem_mgmt.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-mem_mgmt.o -MD -MP -MF "$(DEPDIR)/Gibbs-mem_mgmt.Tpo" -c -o Gibbs-mem_mgmt.o `test -f 'mem_mgmt.c' || echo '$(srcdir)/'`mem_mgmt.c; \
	then mv -f "$(DEPDIR)/Gibbs-mem_mgmt.Tpo" "$(DEPDIR)/Gibbs-mem_mgmt.Po"; else rm -f "$(DEPDIR)/Gibbs-mem_mgmt.Tpo"; exit 1; fi
#	source='mem_mgmt.c' object='Gibbs-mem_mgmt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-mem_mgmt.o `test -f 'mem_mgmt.c' || echo '$(srcdir)/'`mem_mgmt.c

Gibbs-mem_mgmt.obj: mem_mgmt.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-mem_mgmt.obj -MD -MP -MF "$(DEPDIR)/Gibbs-mem_mgmt.Tpo" -c -o Gibbs-mem_mgmt.obj `if test -f 'mem_mgmt.c'; then $(CYGPATH_W) 'mem_mgmt.c'; else $(CYGPATH_W) '$(srcdir)/mem_mgmt.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-mem_mgmt.Tpo" "$(DEPDIR)/Gibbs-mem_mgmt.Po"; else rm -f "$(DEPDIR)/Gibbs-mem_mgmt.Tpo"; exit 1; fi
#	source='mem_mgmt.c' object='Gibbs-mem_mgmt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-mem_mgmt.obj `if test -f 'mem_mgmt.c'; then $(CYGPATH_W) 'mem_mgmt.c'; else $(CYGPATH_W) '$(srcdir)/mem_mgmt.c'; fi`

Gibbs-motif.o: motif.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-motif.o -MD -MP -MF "$(DEPDIR)/Gibbs-motif.Tpo" -c -o Gibbs-motif.o `test -f 'motif.c' || echo '$(srcdir)/'`motif.c; \
	then mv -f "$(DEPDIR)/Gibbs-motif.Tpo" "$(DEPDIR)/Gibbs-motif.Po"; else rm -f "$(DEPDIR)/Gibbs-motif.Tpo"; exit 1; fi
#	source='motif.c' object='Gibbs-motif.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-motif.o `test -f 'motif.c' || echo '$(srcdir)/'`motif.c

Gibbs-motif.obj: motif.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-motif.obj -MD -MP -MF "$(DEPDIR)/Gibbs-motif.Tpo" -c -o Gibbs-motif.obj `if test -f 'motif.c'; then $(CYGPATH_W) 'motif.c'; else $(CYGPATH_W) '$(srcdir)/motif.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-motif.Tpo" "$(DEPDIR)/Gibbs-motif.Po"; else rm -f "$(DEPDIR)/Gibbs-motif.Tpo"; exit 1; fi
#	source='motif.c' object='Gibbs-motif.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-motif.obj `if test -f 'motif.c'; then $(CYGPATH_W) 'motif.c'; else $(CYGPATH_W) '$(srcdir)/motif.c'; fi`

Gibbs-motifsamp.o: motifsamp.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-motifsamp.o -MD -MP -MF "$(DEPDIR)/Gibbs-motifsamp.Tpo" -c -o Gibbs-motifsamp.o `test -f 'motifsamp.c' || echo '$(srcdir)/'`motifsamp.c; \
	then mv -f "$(DEPDIR)/Gibbs-motifsamp.Tpo" "$(DEPDIR)/Gibbs-motifsamp.Po"; else rm -f "$(DEPDIR)/Gibbs-motifsamp.Tpo"; exit 1; fi
#	source='motifsamp.c' object='Gibbs-motifsamp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-motifsamp.o `test -f 'motifsamp.c' || echo '$(srcdir)/'`motifsamp.c

Gibbs-motifsamp.obj: motifsamp.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-motifsamp.obj -MD -MP -MF "$(DEPDIR)/Gibbs-motifsamp.Tpo" -c -o Gibbs-motifsamp.obj `if test -f 'motifsamp.c'; then $(CYGPATH_W) 'motifsamp.c'; else $(CYGPATH_W) '$(srcdir)/motifsamp.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-motifsamp.Tpo" "$(DEPDIR)/Gibbs-motifsamp.Po"; else rm -f "$(DEPDIR)/Gibbs-motifsamp.Tpo"; exit 1; fi
#	source='motifsamp.c' object='Gibbs-motifsamp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-motifsamp.obj `if test -f 'motifsamp.c'; then $(CYGPATH_W) 'motifsamp.c'; else $(CYGPATH_W) '$(srcdir)/motifsamp.c'; fi`

Gibbs-nearopt.o: nearopt.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-nearopt.o -MD -MP -MF "$(DEPDIR)/Gibbs-nearopt.Tpo" -c -o Gibbs-nearopt.o `test -f 'nearopt.c' || echo '$(srcdir)/'`nearopt.c; \
	then mv -f "$(DEPDIR)/Gibbs-nearopt.Tpo" "$(DEPDIR)/Gibbs-nearopt.Po"; else rm -f "$(DEPDIR)/Gibbs-nearopt.Tpo"; exit 1; fi
#	source='nearopt.c' object='Gibbs-nearopt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-nearopt.o `test -f 'nearopt.c' || echo '$(srcdir)/'`nearopt.c

Gibbs-nearopt.obj: nearopt.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-nearopt.obj -MD -MP -MF "$(DEPDIR)/Gibbs-nearopt.Tpo" -c -o Gibbs-nearopt.obj `if test -f 'nearopt.c'; then $(CYGPATH_W) 'nearopt.c'; else $(CYGPATH_W) '$(srcdir)/nearopt.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-nearopt.Tpo" "$(DEPDIR)/Gibbs-nearopt.Po"; else rm -f "$(DEPDIR)/Gibbs-nearopt.Tpo"; exit 1; fi
#	source='nearopt.c' object='Gibbs-nearopt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-nearopt.obj `if test -f 'nearopt.c'; then $(CYGPATH_W) 'nearopt.c'; else $(CYGPATH_W) '$(srcdir)/nearopt.c'; fi`

Gibbs-parameters.o: parameters.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-parameters.o -MD -MP -MF "$(DEPDIR)/Gibbs-parameters.Tpo" -c -o Gibbs-parameters.o `test -f 'parameters.c' || echo '$(srcdir)/'`parameters.c; \
	then mv -f "$(DEPDIR)/Gibbs-parameters.Tpo" "$(DEPDIR)/Gibbs-parameters.Po"; else rm -f "$(DEPDIR)/Gibbs-parameters.Tpo"; exit 1; fi
#	source='parameters.c' object='Gibbs-parameters.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-parameters.o `test -f 'parameters.c' || echo '$(srcdir)/'`parameters.c

Gibbs-parameters.obj: parameters.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-parameters.obj -MD -MP -MF "$(DEPDIR)/Gibbs-parameters.Tpo" -c -o Gibbs-parameters.obj `if test -f 'parameters.c'; then $(CYGPATH_W) 'parameters.c'; else $(CYGPATH_W) '$(srcdir)/parameters.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-parameters.Tpo" "$(DEPDIR)/Gibbs-parameters.Po"; else rm -f "$(DEPDIR)/Gibbs-parameters.Tpo"; exit 1; fi
#	source='parameters.c' object='Gibbs-parameters.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-parameters.obj `if test -f 'parameters.c'; then $(CYGPATH_W) 'parameters.c'; else $(CYGPATH_W) '$(srcdir)/parameters.c'; fi`

Gibbs-printdata.o: printdata.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-printdata.o -MD -MP -MF "$(DEPDIR)/Gibbs-printdata.Tpo" -c -o Gibbs-printdata.o `test -f 'printdata.c' || echo '$(srcdir)/'`printdata.c; \
	then mv -f "$(DEPDIR)/Gibbs-printdata.Tpo" "$(DEPDIR)/Gibbs-printdata.Po"; else rm -f "$(DEPDIR)/Gibbs-printdata.Tpo"; exit 1; fi
#	source='printdata.c' object='Gibbs-printdata.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-printdata.o `test -f 'printdata.c' || echo '$(srcdir)/'`printdata.c

Gibbs-printdata.obj: printdata.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-printdata.obj -MD -MP -MF "$(DEPDIR)/Gibbs-printdata.Tpo" -c -o Gibbs-printdata.obj `if test -f 'printdata.c'; then $(CYGPATH_W) 'printdata.c'; else $(CYGPATH_W) '$(srcdir)/printdata.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-printdata.Tpo" "$(DEPDIR)/Gibbs-printdata.Po"; else rm -f "$(DEPDIR)/Gibbs-printdata.Tpo"; exit 1; fi
#	source='printdata.c' object='Gibbs-printdata.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-printdata.obj `if test -f 'printdata.c'; then $(CYGPATH_W) 'printdata.c'; else $(CYGPATH_W) '$(srcdir)/printdata.c'; fi`

Gibbs-probability.o: probability.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-probability.o -MD -MP -MF "$(DEPDIR)/Gibbs-probability.Tpo" -c -o Gibbs-probability.o `test -f 'probability.c' || echo '$(srcdir)/'`probability.c; \
	then mv -f "$(DEPDIR)/Gibbs-probability.Tpo" "$(DEPDIR)/Gibbs-probability.Po"; else rm -f "$(DEPDIR)/Gibbs-probability.Tpo"; exit 1; fi
#	source='probability.c' object='Gibbs-probability.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-probability.o `test -f 'probability.c' || echo '$(srcdir)/'`probability.c

Gibbs-probability.obj: probability.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-probability.obj -MD -MP -MF "$(DEPDIR)/Gibbs-probability.Tpo" -c -o Gibbs-probability.obj `if test -f 'probability.c'; then $(CYGPATH_W) 'probability.c'; else $(CYGPATH_W) '$(srcdir)/probability.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-probability.Tpo" "$(DEPDIR)/Gibbs-probability.Po"; else rm -f "$(DEPDIR)/Gibbs-probability.Tpo"; exit 1; fi
#	source='probability.c' object='Gibbs-probability.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-probability.obj `if test -f 'probability.c'; then $(CYGPATH_W) 'probability.c'; else $(CYGPATH_W) '$(srcdir)/probability.c'; fi`

Gibbs-process.o: process.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-process.o -MD -MP -MF "$(DEPDIR)/Gibbs-process.Tpo" -c -o Gibbs-process.o `test -f 'process.c' || echo '$(srcdir)/'`process.c; \
	then mv -f "$(DEPDIR)/Gibbs-process.Tpo" "$(DEPDIR)/Gibbs-process.Po"; else rm -f "$(DEPDIR)/Gibbs-process.Tpo"; exit 1; fi
#	source='process.c' object='Gibbs-process.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-process.o `test -f 'process.c' || echo '$(srcdir)/'`process.c

Gibbs-process.obj: process.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-process.obj -MD -MP -MF "$(DEPDIR)/Gibbs-process.Tpo" -c -o Gibbs-process.obj `if test -f 'process.c'; then $(CYGPATH_W) 'process.c'; else $(CYGPATH_W) '$(srcdir)/process.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-process.Tpo" "$(DEPDIR)/Gibbs-process.Po"; else rm -f "$(DEPDIR)/Gibbs-process.Tpo"; exit 1; fi
#	source='process.c' object='Gibbs-process.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-process.obj `if test -f 'process.c'; then $(CYGPATH_W) 'process.c'; else $(CYGPATH_W) '$(srcdir)/process.c'; fi`

Gibbs-sampling.o: sampling.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-sampling.o -MD -MP -MF "$(DEPDIR)/Gibbs-sampling.Tpo" -c -o Gibbs-sampling.o `test -f 'sampling.c' || echo '$(srcdir)/'`sampling.c; \
	then mv -f "$(DEPDIR)/Gibbs-sampling.Tpo" "$(DEPDIR)/Gibbs-sampling.Po"; else rm -f "$(DEPDIR)/Gibbs-sampling.Tpo"; exit 1; fi
#	source='sampling.c' object='Gibbs-sampling.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-sampling.o `test -f 'sampling.c' || echo '$(srcdir)/'`sampling.c

Gibbs-sampling.obj: sampling.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-sampling.obj -MD -MP -MF "$(DEPDIR)/Gibbs-sampling.Tpo" -c -o Gibbs-sampling.obj `if test -f 'sampling.c'; then $(CYGPATH_W) 'sampling.c'; else $(CYGPATH_W) '$(srcdir)/sampling.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-sampling.Tpo" "$(DEPDIR)/Gibbs-sampling.Po"; else rm -f "$(DEPDIR)/Gibbs-sampling.Tpo"; exit 1; fi
#	source='sampling.c' object='Gibbs-sampling.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-sampling.obj `if test -f 'sampling.c'; then $(CYGPATH_W) 'sampling.c'; else $(CYGPATH_W) '$(srcdir)/sampling.c'; fi`

Gibbs-sitesamp.o: sitesamp.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-sitesamp.o -MD -MP -MF "$(DEPDIR)/Gibbs-sitesamp.Tpo" -c -o Gibbs-sitesamp.o `test -f 'sitesamp.c' || echo '$(srcdir)/'`sitesamp.c; \
	then mv -f "$(DEPDIR)/Gibbs-sitesamp.Tpo" "$(DEPDIR)/Gibbs-sitesamp.Po"; else rm -f "$(DEPDIR)/Gibbs-sitesamp.Tpo"; exit 1; fi
#	source='sitesamp.c' object='Gibbs-sitesamp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-sitesamp.o `test -f 'sitesamp.c' || echo '$(srcdir)/'`sitesamp.c

Gibbs-sitesamp.obj: sitesamp.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-sitesamp.obj -MD -MP -MF "$(DEPDIR)/Gibbs-sitesamp.Tpo" -c -o Gibbs-sitesamp.obj `if test -f 'sitesamp.c'; then $(CYGPATH_W) 'sitesamp.c'; else $(CYGPATH_W) '$(srcdir)/sitesamp.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-sitesamp.Tpo" "$(DEPDIR)/Gibbs-sitesamp.Po"; else rm -f "$(DEPDIR)/Gibbs-sitesamp.Tpo"; exit 1; fi
#	source='sitesamp.c' object='Gibbs-sitesamp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-sitesamp.obj `if test -f 'sitesamp.c'; then $(CYGPATH_W) 'sitesamp.c'; else $(CYGPATH_W) '$(srcdir)/sitesamp.c'; fi`

Gibbs-subopt.o: subopt.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-subopt.o -MD -MP -MF "$(DEPDIR)/Gibbs-subopt.Tpo" -c -o Gibbs-subopt.o `test -f 'subopt.c' || echo '$(srcdir)/'`subopt.c; \
	then mv -f "$(DEPDIR)/Gibbs-subopt.Tpo" "$(DEPDIR)/Gibbs-subopt.Po"; else rm -f "$(DEPDIR)/Gibbs-subopt.Tpo"; exit 1; fi
#	source='subopt.c' object='Gibbs-subopt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-subopt.o `test -f 'subopt.c' || echo '$(srcdir)/'`subopt.c

Gibbs-subopt.obj: subopt.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-subopt.obj -MD -MP -MF "$(DEPDIR)/Gibbs-subopt.Tpo" -c -o Gibbs-subopt.obj `if test -f 'subopt.c'; then $(CYGPATH_W) 'subopt.c'; else $(CYGPATH_W) '$(srcdir)/subopt.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-subopt.Tpo" "$(DEPDIR)/Gibbs-subopt.Po"; else rm -f "$(DEPDIR)/Gibbs-subopt.Tpo"; exit 1; fi
#	source='subopt.c' object='Gibbs-subopt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-subopt.obj `if test -f 'subopt.c'; then $(CYGPATH_W) 'subopt.c'; else $(CYGPATH_W) '$(srcdir)/subopt.c'; fi`

Gibbs-width.o: width.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-width.o -MD -MP -MF "$(DEPDIR)/Gibbs-width.Tpo" -c -o Gibbs-width.o `test -f 'width.c' || echo '$(srcdir)/'`width.c; \
	then mv -f "$(DEPDIR)/Gibbs-width.Tpo" "$(DEPDIR)/Gibbs-width.Po"; else rm -f "$(DEPDIR)/Gibbs-width.Tpo"; exit 1; fi
#	source='width.c' object='Gibbs-width.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-width.o `test -f 'width.c' || echo '$(srcdir)/'`width.c

Gibbs-width.obj: width.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-width.obj -MD -MP -MF "$(DEPDIR)/Gibbs-width.Tpo" -c -o Gibbs-width.obj `if test -f 'width.c'; then $(CYGPATH_W) 'width.c'; else $(CYGPATH_W) '$(srcdir)/width.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-width.Tpo" "$(DEPDIR)/Gibbs-width.Po"; else rm -f "$(DEPDIR)/Gibbs-width.Tpo"; exit 1; fi
#	source='width.c' object='Gibbs-width.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-width.obj `if test -f 'width.c'; then $(CYGPATH_W) 'width.c'; else $(CYGPATH_W) '$(srcdir)/width.c'; fi`

Gibbs-wilcoxon.o: wilcoxon.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-wilcoxon.o -MD -MP -MF "$(DEPDIR)/Gibbs-wilcoxon.Tpo" -c -o Gibbs-wilcoxon.o `test -f 'wilcoxon.c' || echo '$(srcdir)/'`wilcoxon.c; \
	then mv -f "$(DEPDIR)/Gibbs-wilcoxon.Tpo" "$(DEPDIR)/Gibbs-wilcoxon.Po"; else rm -f "$(DEPDIR)/Gibbs-wilcoxon.Tpo"; exit 1; fi
#	source='wilcoxon.c' object='Gibbs-wilcoxon.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-wilcoxon.o `test -f 'wilcoxon.c' || echo '$(srcdir)/'`wilcoxon.c

Gibbs-wilcoxon.obj: wilcoxon.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-wilcoxon.obj -MD -MP -MF "$(DEPDIR)/Gibbs-wilcoxon.Tpo" -c -o Gibbs-wilcoxon.obj `if test -f 'wilcoxon.c'; then $(CYGPATH_W) 'wilcoxon.c'; else $(CYGPATH_W) '$(srcdir)/wilcoxon.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-wilcoxon.Tpo" "$(DEPDIR)/Gibbs-wilcoxon.Po"; else rm -f "$(DEPDIR)/Gibbs-wilcoxon.Tpo"; exit 1; fi
#	source='wilcoxon.c' object='Gibbs-wilcoxon.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-wilcoxon.obj `if test -f 'wilcoxon.c'; then $(CYGPATH_W) 'wilcoxon.c'; else $(CYGPATH_W) '$(srcdir)/wilcoxon.c'; fi`

Gibbs-perror.o: perror.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-perror.o -MD -MP -MF "$(DEPDIR)/Gibbs-perror.Tpo" -c -o Gibbs-perror.o `test -f 'perror.c' || echo '$(srcdir)/'`perror.c; \
	then mv -f "$(DEPDIR)/Gibbs-perror.Tpo" "$(DEPDIR)/Gibbs-perror.Po"; else rm -f "$(DEPDIR)/Gibbs-perror.Tpo"; exit 1; fi
#	source='perror.c' object='Gibbs-perror.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-perror.o `test -f 'perror.c' || echo '$(srcdir)/'`perror.c

Gibbs-perror.obj: perror.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-perror.obj -MD -MP -MF "$(DEPDIR)/Gibbs-perror.Tpo" -c -o Gibbs-perror.obj `if test -f 'perror.c'; then $(CYGPATH_W) 'perror.c'; else $(CYGPATH_W) '$(srcdir)/perror.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-perror.Tpo" "$(DEPDIR)/Gibbs-perror.Po"; else rm -f "$(DEPDIR)/Gibbs-perror.Tpo"; exit 1; fi
#	source='perror.c' object='Gibbs-perror.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-perror.obj `if test -f 'perror.c'; then $(CYGPATH_W) 'perror.c'; else $(CYGPATH_W) '$(srcdir)/perror.c'; fi`

Gibbs-recur.o: recur.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-recur.o -MD -MP -MF "$(DEPDIR)/Gibbs-recur.Tpo" -c -o Gibbs-recur.o `test -f 'recur.c' || echo '$(srcdir)/'`recur.c; \
	then mv -f "$(DEPDIR)/Gibbs-recur.Tpo" "$(DEPDIR)/Gibbs-recur.Po"; else rm -f "$(DEPDIR)/Gibbs-recur.Tpo"; exit 1; fi
#	source='recur.c' object='Gibbs-recur.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-recur.o `test -f 'recur.c' || echo '$(srcdir)/'`recur.c

Gibbs-recur.obj: recur.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-recur.obj -MD -MP -MF "$(DEPDIR)/Gibbs-recur.Tpo" -c -o Gibbs-recur.obj `if test -f 'recur.c'; then $(CYGPATH_W) 'recur.c'; else $(CYGPATH_W) '$(srcdir)/recur.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-recur.Tpo" "$(DEPDIR)/Gibbs-recur.Po"; else rm -f "$(DEPDIR)/Gibbs-recur.Tpo"; exit 1; fi
#	source='recur.c' object='Gibbs-recur.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-recur.obj `if test -f 'recur.c'; then $(CYGPATH_W) 'recur.c'; else $(CYGPATH_W) '$(srcdir)/recur.c'; fi`

Gibbs-rsample.o: rsample.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-rsample.o -MD -MP -MF "$(DEPDIR)/Gibbs-rsample.Tpo" -c -o Gibbs-rsample.o `test -f 'rsample.c' || echo '$(srcdir)/'`rsample.c; \
	then mv -f "$(DEPDIR)/Gibbs-rsample.Tpo" "$(DEPDIR)/Gibbs-rsample.Po"; else rm -f "$(DEPDIR)/Gibbs-rsample.Tpo"; exit 1; fi
#	source='rsample.c' object='Gibbs-rsample.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-rsample.o `test -f 'rsample.c' || echo '$(srcdir)/'`rsample.c

Gibbs-rsample.obj: rsample.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-rsample.obj -MD -MP -MF "$(DEPDIR)/Gibbs-rsample.Tpo" -c -o Gibbs-rsample.obj `if test -f 'rsample.c'; then $(CYGPATH_W) 'rsample.c'; else $(CYGPATH_W) '$(srcdir)/rsample.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-rsample.Tpo" "$(DEPDIR)/Gibbs-rsample.Po"; else rm -f "$(DEPDIR)/Gibbs-rsample.Tpo"; exit 1; fi
#	source='rsample.c' object='Gibbs-rsample.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-rsample.obj `if test -f 'rsample.c'; then $(CYGPATH_W) 'rsample.c'; else $(CYGPATH_W) '$(srcdir)/rsample.c'; fi`

Gibbs-prior.o: prior.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-prior.o -MD -MP -MF "$(DEPDIR)/Gibbs-prior.Tpo" -c -o Gibbs-prior.o `test -f 'prior.c' || echo '$(srcdir)/'`prior.c; \
	then mv -f "$(DEPDIR)/Gibbs-prior.Tpo" "$(DEPDIR)/Gibbs-prior.Po"; else rm -f "$(DEPDIR)/Gibbs-prior.Tpo"; exit 1; fi
#	source='prior.c' object='Gibbs-prior.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-prior.o `test -f 'prior.c' || echo '$(srcdir)/'`prior.c

Gibbs-prior.obj: prior.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-prior.obj -MD -MP -MF "$(DEPDIR)/Gibbs-prior.Tpo" -c -o Gibbs-prior.obj `if test -f 'prior.c'; then $(CYGPATH_W) 'prior.c'; else $(CYGPATH_W) '$(srcdir)/prior.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-prior.Tpo" "$(DEPDIR)/Gibbs-prior.Po"; else rm -f "$(DEPDIR)/Gibbs-prior.Tpo"; exit 1; fi
#	source='prior.c' object='Gibbs-prior.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-prior.obj `if test -f 'prior.c'; then $(CYGPATH_W) 'prior.c'; else $(CYGPATH_W) '$(srcdir)/prior.c'; fi`

Gibbs-motifpair.o: motifpair.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-motifpair.o -MD -MP -MF "$(DEPDIR)/Gibbs-motifpair.Tpo" -c -o Gibbs-motifpair.o `test -f 'motifpair.c' || echo '$(srcdir)/'`motifpair.c; \
	then mv -f "$(DEPDIR)/Gibbs-motifpair.Tpo" "$(DEPDIR)/Gibbs-motifpair.Po"; else rm -f "$(DEPDIR)/Gibbs-motifpair.Tpo"; exit 1; fi
#	source='motifpair.c' object='Gibbs-motifpair.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-motifpair.o `test -f 'motifpair.c' || echo '$(srcdir)/'`motifpair.c

Gibbs-motifpair.obj: motifpair.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-motifpair.obj -MD -MP -MF "$(DEPDIR)/Gibbs-motifpair.Tpo" -c -o Gibbs-motifpair.obj `if test -f 'motifpair.c'; then $(CYGPATH_W) 'motifpair.c'; else $(CYGPATH_W) '$(srcdir)/motifpair.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-motifpair.Tpo" "$(DEPDIR)/Gibbs-motifpair.Po"; else rm -f "$(DEPDIR)/Gibbs-motifpair.Tpo"; exit 1; fi
#	source='motifpair.c' object='Gibbs-motifpair.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-motifpair.obj `if test -f 'motifpair.c'; then $(CYGPATH_W) 'motifpair.c'; else $(CYGPATH_W) '$(srcdir)/motifpair.c'; fi`

Gibbs-footprint.o: footprint.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-footprint.o -MD -MP -MF "$(DEPDIR)/Gibbs-footprint.Tpo" -c -o Gibbs-footprint.o `test -f 'footprint.c' || echo '$(srcdir)/'`footprint.c; \
	then mv -f "$(DEPDIR)/Gibbs-footprint.Tpo" "$(DEPDIR)/Gibbs-footprint.Po"; else rm -f "$(DEPDIR)/Gibbs-footprint.Tpo"; exit 1; fi
#	source='footprint.c' object='Gibbs-footprint.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-footprint.o `test -f 'footprint.c' || echo '$(srcdir)/'`footprint.c

Gibbs-footprint.obj: footprint.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-footprint.obj -MD -MP -MF "$(DEPDIR)/Gibbs-footprint.Tpo" -c -o Gibbs-footprint.obj `if test -f 'footprint.c'; then $(CYGPATH_W) 'footprint.c'; else $(CYGPATH_W) '$(srcdir)/footprint.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-footprint.Tpo" "$(DEPDIR)/Gibbs-footprint.Po"; else rm -f "$(DEPDIR)/Gibbs-footprint.Tpo"; exit 1; fi
#	source='footprint.c' object='Gibbs-footprint.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-footprint.obj `if test -f 'footprint.c'; then $(CYGPATH_W) 'footprint.c'; else $(CYGPATH_W) '$(srcdir)/footprint.c'; fi`

Gibbs-exchange.o: exchange.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-exchange.o -MD -MP -MF "$(DEPDIR)/Gibbs-exchange.Tpo" -c -o Gibbs-exchange.o `test -f 'exchange.c' || echo '$(srcdir)/'`exchange.c; \
	then mv -f "$(DEPDIR)/Gibbs-exchange.Tpo" "$(DEPDIR)/Gibbs-exchange.Po"; else rm -f "$(DEPDIR)/Gibbs-exchange.Tpo"; exit 1; fi
#	source='exchange.c' object='Gibbs-exchange.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-exchange.o `test -f 'exchange.c' || echo '$(srcdir)/'`exchange.c

Gibbs-exchange.obj: exchange.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-exchange.obj -MD -MP -MF "$(DEPDIR)/Gibbs-exchange.Tpo" -c -o Gibbs-exchange.obj `if test -f 'exchange.c'; then $(CYGPATH_W) 'exchange.c'; else $(CYGPATH_W) '$(srcdir)/exchange.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-exchange.Tpo" "$(DEPDIR)/Gibbs-exchange.Po"; else rm -f "$(DEPDIR)/Gibbs-exchange.Tpo"; exit 1; fi
#	source='exchange.c' object='Gibbs-exchange.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-exchange.obj `if test -f 'exchange.c'; then $(CYGPATH_W) 'exchange.c'; else $(CYGPATH_W) '$(srcdir)/exchange.c'; fi`

Gibbs-groupsampler.o: groupsampler.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-groupsampler.o -MD -MP -MF "$(DEPDIR)/Gibbs-groupsampler.Tpo" -c -o Gibbs-groupsampler.o `test -f 'groupsampler.c' || echo '$(srcdir)/'`groupsampler.c; \
	then mv -f "$(DEPDIR)/Gibbs-groupsampler.Tpo" "$(DEPDIR)/Gibbs-groupsampler.Po"; else rm -f "$(DEPDIR)/Gibbs-groupsampler.Tpo"; exit 1; fi
#	source='groupsampler.c' object='Gibbs-groupsampler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-groupsampler.o `test -f 'groupsampler.c' || echo '$(srcdir)/'`groupsampler.c

Gibbs-groupsampler.obj: groupsampler.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-groupsampler.obj -MD -MP -MF "$(DEPDIR)/Gibbs-groupsampler.Tpo" -c -o Gibbs-groupsampler.obj `if test -f 'groupsampler.c'; then $(CYGPATH_W) 'groupsampler.c'; else $(CYGPATH_W) '$(srcdir)/groupsampler.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-groupsampler.Tpo" "$(DEPDIR)/Gibbs-groupsampler.Po"; else rm -f "$(DEPDIR)/Gibbs-groupsampler.Tpo"; exit 1; fi
#	source='groupsampler.c' object='Gibbs-groupsampler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-groupsampler.obj `if test -f 'groupsampler.c'; then $(CYGPATH_W) 'groupsampler.c'; else $(CYGPATH_W) '$(srcdir)/groupsampler.c'; fi`

Gibbs-weights.o: weights.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-weights.o -MD -MP -MF "$(DEPDIR)/Gibbs-weights.Tpo" -c -o Gibbs-weights.o `test -f 'weights.c' || echo '$(srcdir)/'`weights.c; \
	then mv -f "$(DEPDIR)/Gibbs-weights.Tpo" "$(DEPDIR)/Gibbs-weights.Po"; else rm -f "$(DEPDIR)/Gibbs-weights.Tpo"; exit 1; fi
#	source='weights.c' object='Gibbs-weights.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-weights.o `test -f 'weights.c' || echo '$(srcdir)/'`weights.c

Gibbs-weights.obj: weights.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-weights.obj -MD -MP -MF "$(DEPDIR)/Gibbs-weights.Tpo" -c -o Gibbs-weights.obj `if test -f 'weights.c'; then $(CYGPATH_W) 'weights.c'; else $(CYGPATH_W) '$(srcdir)/weights.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-weights.Tpo" "$(DEPDIR)/Gibbs-weights.Po"; else rm -f "$(DEPDIR)/Gibbs-weights.Tpo"; exit 1; fi
#	source='weights.c' object='Gibbs-weights.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-weights.obj `if test -f 'weights.c'; then $(CYGPATH_W) 'weights.c'; else $(CYGPATH_W) '$(srcdir)/weights.c'; fi`

Gibbs-trans.o: trans.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-trans.o -MD -MP -MF "$(DEPDIR)/Gibbs-trans.Tpo" -c -o Gibbs-trans.o `test -f 'trans.c' || echo '$(srcdir)/'`trans.c; \
	then mv -f "$(DEPDIR)/Gibbs-trans.Tpo" "$(DEPDIR)/Gibbs-trans.Po"; else rm -f "$(DEPDIR)/Gibbs-trans.Tpo"; exit 1; fi
#	source='trans.c' object='Gibbs-trans.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-trans.o `test -f 'trans.c' || echo '$(srcdir)/'`trans.c

Gibbs-trans.obj: trans.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-trans.obj -MD -MP -MF "$(DEPDIR)/Gibbs-trans.Tpo" -c -o Gibbs-trans.obj `if test -f 'trans.c'; then $(CYGPATH_W) 'trans.c'; else $(CYGPATH_W) '$(srcdir)/trans.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-trans.Tpo" "$(DEPDIR)/Gibbs-trans.Po"; else rm -f "$(DEPDIR)/Gibbs-trans.Tpo"; exit 1; fi
#	source='trans.c' object='Gibbs-trans.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-trans.obj `if test -f 'trans.c'; then $(CYGPATH_W) 'trans.c'; else $(CYGPATH_W) '$(srcdir)/trans.c'; fi`

Gibbs-position.o: position.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-position.o -MD -MP -MF "$(DEPDIR)/Gibbs-position.Tpo" -c -o Gibbs-position.o `test -f 'position.c' || echo '$(srcdir)/'`position.c; \
	then mv -f "$(DEPDIR)/Gibbs-position.Tpo" "$(DEPDIR)/Gibbs-position.Po"; else rm -f "$(DEPDIR)/Gibbs-position.Tpo"; exit 1; fi
#	source='position.c' object='Gibbs-position.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-position.o `test -f 'position.c' || echo '$(srcdir)/'`position.c

Gibbs-position.obj: position.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-position.obj -MD -MP -MF "$(DEPDIR)/Gibbs-position.Tpo" -c -o Gibbs-position.obj `if test -f 'position.c'; then $(CYGPATH_W) 'position.c'; else $(CYGPATH_W) '$(srcdir)/position.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-position.Tpo" "$(DEPDIR)/Gibbs-position.Po"; else rm -f "$(DEPDIR)/Gibbs-position.Tpo"; exit 1; fi
#	source='position.c' object='Gibbs-position.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-position.obj `if test -f 'position.c'; then $(CYGPATH_W) 'position.c'; else $(CYGPATH_W) '$(srcdir)/position.c'; fi`

Gibbs-seqmap.o: seqmap.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-seqmap.o -MD -MP -MF "$(DEPDIR)/Gibbs-seqmap.Tpo" -c -o Gibbs-seqmap.o `test -f 'seqmap.c' || echo '$(srcdir)/'`seqmap.c; \
	then mv -f "$(DEPDIR)/Gibbs-seqmap.Tpo" "$(DEPDIR)/Gibbs-seqmap.Po"; else rm -f "$(DEPDIR)/Gibbs-seqmap.Tpo"; exit 1; fi
#	source='seqmap.c' object='Gibbs-seqmap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-seqmap.o `test -f 'seqmap.c' || echo '$(srcdir)/'`seqmap.c

Gibbs-seqmap.obj: seqmap.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-seqmap.obj -MD -MP -MF "$(DEPDIR)/Gibbs-seqmap.Tpo" -c -o Gibbs-seqmap.obj `if test -f 'seqmap.c'; then $(CYGPATH_W) 'seqmap.c'; else $(CYGPATH_W) '$(srcdir)/seqmap.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-seqmap.Tpo" "$(DEPDIR)/Gibbs-seqmap.Po"; else rm -f "$(DEPDIR)/Gibbs-seqmap.Tpo"; exit 1; fi
#	source='seqmap.c' object='Gibbs-seqmap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-seqmap.obj `if test -f 'seqmap.c'; then $(CYGPATH_W) 'seqmap.c'; else $(CYGPATH_W) '$(srcdir)/seqmap.c'; fi`

Gibbs-phyllip.o: phyllip.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-phyllip.o -MD -MP -MF "$(DEPDIR)/Gibbs-phyllip.Tpo" -c -o Gibbs-phyllip.o `test -f 'phyllip.c' || echo '$(srcdir)/'`phyllip.c; \
	then mv -f "$(DEPDIR)/Gibbs-phyllip.Tpo" "$(DEPDIR)/Gibbs-phyllip.Po"; else rm -f "$(DEPDIR)/Gibbs-phyllip.Tpo"; exit 1; fi
#	source='phyllip.c' object='Gibbs-phyllip.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-phyllip.o `test -f 'phyllip.c' || echo '$(srcdir)/'`phyllip.c

Gibbs-phyllip.obj: phyllip.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-phyllip.obj -MD -MP -MF "$(DEPDIR)/Gibbs-phyllip.Tpo" -c -o Gibbs-phyllip.obj `if test -f 'phyllip.c'; then $(CYGPATH_W) 'phyllip.c'; else $(CYGPATH_W) '$(srcdir)/phyllip.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-phyllip.Tpo" "$(DEPDIR)/Gibbs-phyllip.Po"; else rm -f "$(DEPDIR)/Gibbs-phyllip.Tpo"; exit 1; fi
#	source='phyllip.c' object='Gibbs-phyllip.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-phyllip.obj `if test -f 'phyllip.c'; then $(CYGPATH_W) 'phyllip.c'; else $(CYGPATH_W) '$(srcdir)/phyllip.c'; fi`

Gibbs-fels.o: fels.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-fels.o -MD -MP -MF "$(DEPDIR)/Gibbs-fels.Tpo" -c -o Gibbs-fels.o `test -f 'fels.c' || echo '$(srcdir)/'`fels.c; \
	then mv -f "$(DEPDIR)/Gibbs-fels.Tpo" "$(DEPDIR)/Gibbs-fels.Po"; else rm -f "$(DEPDIR)/Gibbs-fels.Tpo"; exit 1; fi
#	source='fels.c' object='Gibbs-fels.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-fels.o `test -f 'fels.c' || echo '$(srcdir)/'`fels.c

Gibbs-fels.obj: fels.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-fels.obj -MD -MP -MF "$(DEPDIR)/Gibbs-fels.Tpo" -c -o Gibbs-fels.obj `if test -f 'fels.c'; then $(CYGPATH_W) 'fels.c'; else $(CYGPATH_W) '$(srcdir)/fels.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-fels.Tpo" "$(DEPDIR)/Gibbs-fels.Po"; else rm -f "$(DEPDIR)/Gibbs-fels.Tpo"; exit 1; fi
#	source='fels.c' object='Gibbs-fels.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-fels.obj `if test -f 'fels.c'; then $(CYGPATH_W) 'fels.c'; else $(CYGPATH_W) '$(srcdir)/fels.c'; fi`

Gibbs-impsamp.o: impsamp.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-impsamp.o -MD -MP -MF "$(DEPDIR)/Gibbs-impsamp.Tpo" -c -o Gibbs-impsamp.o `test -f 'impsamp.c' || echo '$(srcdir)/'`impsamp.c; \
	then mv -f "$(DEPDIR)/Gibbs-impsamp.Tpo" "$(DEPDIR)/Gibbs-impsamp.Po"; else rm -f "$(DEPDIR)/Gibbs-impsamp.Tpo"; exit 1; fi
#	source='impsamp.c' object='Gibbs-impsamp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-impsamp.o `test -f 'impsamp.c' || echo '$(srcdir)/'`impsamp.c

Gibbs-impsamp.obj: impsamp.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-impsamp.obj -MD -MP -MF "$(DEPDIR)/Gibbs-impsamp.Tpo" -c -o Gibbs-impsamp.obj `if test -f 'impsamp.c'; then $(CYGPATH_W) 'impsamp.c'; else $(CYGPATH_W) '$(srcdir)/impsamp.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-impsamp.Tpo" "$(DEPDIR)/Gibbs-impsamp.Po"; else rm -f "$(DEPDIR)/Gibbs-impsamp.Tpo"; exit 1; fi
#	source='impsamp.c' object='Gibbs-impsamp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-impsamp.obj `if test -f 'impsamp.c'; then $(CYGPATH_W) 'impsamp.c'; else $(CYGPATH_W) '$(srcdir)/impsamp.c'; fi`

Gibbs-rgamma.o: rgamma.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-rgamma.o -MD -MP -MF "$(DEPDIR)/Gibbs-rgamma.Tpo" -c -o Gibbs-rgamma.o `test -f 'rgamma.c' || echo '$(srcdir)/'`rgamma.c; \
	then mv -f "$(DEPDIR)/Gibbs-rgamma.Tpo" "$(DEPDIR)/Gibbs-rgamma.Po"; else rm -f "$(DEPDIR)/Gibbs-rgamma.Tpo"; exit 1; fi
#	source='rgamma.c' object='Gibbs-rgamma.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-rgamma.o `test -f 'rgamma.c' || echo '$(srcdir)/'`rgamma.c

Gibbs-rgamma.obj: rgamma.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-rgamma.obj -MD -MP -MF "$(DEPDIR)/Gibbs-rgamma.Tpo" -c -o Gibbs-rgamma.obj `if test -f 'rgamma.c'; then $(CYGPATH_W) 'rgamma.c'; else $(CYGPATH_W) '$(srcdir)/rgamma.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-rgamma.Tpo" "$(DEPDIR)/Gibbs-rgamma.Po"; else rm -f "$(DEPDIR)/Gibbs-rgamma.Tpo"; exit 1; fi
#	source='rgamma.c' object='Gibbs-rgamma.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-rgamma.obj `if test -f 'rgamma.c'; then $(CYGPATH_W) 'rgamma.c'; else $(CYGPATH_W) '$(srcdir)/rgamma.c'; fi`

Gibbs-model.o: model.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-model.o -MD -MP -MF "$(DEPDIR)/Gibbs-model.Tpo" -c -o Gibbs-model.o `test -f 'model.c' || echo '$(srcdir)/'`model.c; \
	then mv -f "$(DEPDIR)/Gibbs-model.Tpo" "$(DEPDIR)/Gibbs-model.Po"; else rm -f "$(DEPDIR)/Gibbs-model.Tpo"; exit 1; fi
#	source='model.c' object='Gibbs-model.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-model.o `test -f 'model.c' || echo '$(srcdir)/'`model.c

Gibbs-model.obj: model.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-model.obj -MD -MP -MF "$(DEPDIR)/Gibbs-model.Tpo" -c -o Gibbs-model.obj `if test -f 'model.c'; then $(CYGPATH_W) 'model.c'; else $(CYGPATH_W) '$(srcdir)/model.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-model.Tpo" "$(DEPDIR)/Gibbs-model.Po"; else rm -f "$(DEPDIR)/Gibbs-model.Tpo"; exit 1; fi
#	source='model.c' object='Gibbs-model.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-model.obj `if test -f 'model.c'; then $(CYGPATH_W) 'model.c'; else $(CYGPATH_W) '$(srcdir)/model.c'; fi`

Gibbs-bayes.o: bayes.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-bayes.o -MD -MP -MF "$(DEPDIR)/Gibbs-bayes.Tpo" -c -o Gibbs-bayes.o `test -f 'bayes.c' || echo '$(srcdir)/'`bayes.c; \
	then mv -f "$(DEPDIR)/Gibbs-bayes.Tpo" "$(DEPDIR)/Gibbs-bayes.Po"; else rm -f "$(DEPDIR)/Gibbs-bayes.Tpo"; exit 1; fi
#	source='bayes.c' object='Gibbs-bayes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-bayes.o `test -f 'bayes.c' || echo '$(srcdir)/'`bayes.c

Gibbs-bayes.obj: bayes.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-bayes.obj -MD -MP -MF "$(DEPDIR)/Gibbs-bayes.Tpo" -c -o Gibbs-bayes.obj `if test -f 'bayes.c'; then $(CYGPATH_W) 'bayes.c'; else $(CYGPATH_W) '$(srcdir)/bayes.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-bayes.Tpo" "$(DEPDIR)/Gibbs-bayes.Po"; else rm -f "$(DEPDIR)/Gibbs-bayes.Tpo"; exit 1; fi
#	source='bayes.c' object='Gibbs-bayes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-bayes.obj `if test -f 'bayes.c'; then $(CYGPATH_W) 'bayes.c'; else $(CYGPATH_W) '$(srcdir)/bayes.c'; fi`

Gibbs-species_sample.o: species_sample.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-species_sample.o -MD -MP -MF "$(DEPDIR)/Gibbs-species_sample.Tpo" -c -o Gibbs-species_sample.o `test -f 'species_sample.c' || echo '$(srcdir)/'`species_sample.c; \
	then mv -f "$(DEPDIR)/Gibbs-species_sample.Tpo" "$(DEPDIR)/Gibbs-species_sample.Po"; else rm -f "$(DEPDIR)/Gibbs-species_sample.Tpo"; exit 1; fi
#	source='species_sample.c' object='Gibbs-species_sample.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-species_sample.o `test -f 'species_sample.c' || echo '$(srcdir)/'`species_sample.c

Gibbs-species_sample.obj: species_sample.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-species_sample.obj -MD -MP -MF "$(DEPDIR)/Gibbs-species_sample.Tpo" -c -o Gibbs-species_sample.obj `if test -f 'species_sample.c'; then $(CYGPATH_W) 'species_sample.c'; else $(CYGPATH_W) '$(srcdir)/species_sample.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-species_sample.Tpo" "$(DEPDIR)/Gibbs-species_sample.Po"; else rm -f "$(DEPDIR)/Gibbs-species_sample.Tpo"; exit 1; fi
#	source='species_sample.c' object='Gibbs-species_sample.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-species_sample.obj `if test -f 'species_sample.c'; then $(CYGPATH_W) 'species_sample.c'; else $(CYGPATH_W) '$(srcdir)/species_sample.c'; fi`

Gibbs-gibbsmpi.o: gibbsmpi.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-gibbsmpi.o -MD -MP -MF "$(DEPDIR)/Gibbs-gibbsmpi.Tpo" -c -o Gibbs-gibbsmpi.o `test -f 'gibbsmpi.c' || echo '$(srcdir)/'`gibbsmpi.c; \
	then mv -f "$(DEPDIR)/Gibbs-gibbsmpi.Tpo" "$(DEPDIR)/Gibbs-gibbsmpi.Po"; else rm -f "$(DEPDIR)/Gibbs-gibbsmpi.Tpo"; exit 1; fi
#	source='gibbsmpi.c' object='Gibbs-gibbsmpi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-gibbsmpi.o `test -f 'gibbsmpi.c' || echo '$(srcdir)/'`gibbsmpi.c

Gibbs-gibbsmpi.obj: gibbsmpi.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-gibbsmpi.obj -MD -MP -MF "$(DEPDIR)/Gibbs-gibbsmpi.Tpo" -c -o Gibbs-gibbsmpi.obj `if test -f 'gibbsmpi.c'; then $(CYGPATH_W) 'gibbsmpi.c'; else $(CYGPATH_W) '$(srcdir)/gibbsmpi.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-gibbsmpi.Tpo" "$(DEPDIR)/Gibbs-gibbsmpi.Po"; else rm -f "$(DEPDIR)/Gibbs-gibbsmpi.Tpo"; exit 1; fi
#	source='gibbsmpi.c' object='Gibbs-gibbsmpi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-gibbsmpi.obj `if test -f 'gibbsmpi.c'; then $(CYGPATH_W) 'gibbsmpi.c'; else $(CYGPATH_W) '$(srcdir)/gibbsmpi.c'; fi`

Gibbs-hier.o: hier.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-hier.o -MD -MP -MF "$(DEPDIR)/Gibbs-hier.Tpo" -c -o Gibbs-hier.o `test -f 'hier.c' || echo '$(srcdir)/'`hier.c; \
	then mv -f "$(DEPDIR)/Gibbs-hier.Tpo" "$(DEPDIR)/Gibbs-hier.Po"; else rm -f "$(DEPDIR)/Gibbs-hier.Tpo"; exit 1; fi
#	source='hier.c' object='Gibbs-hier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-hier.o `test -f 'hier.c' || echo '$(srcdir)/'`hier.c

Gibbs-hier.obj: hier.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-hier.obj -MD -MP -MF "$(DEPDIR)/Gibbs-hier.Tpo" -c -o Gibbs-hier.obj `if test -f 'hier.c'; then $(CYGPATH_W) 'hier.c'; else $(CYGPATH_W) '$(srcdir)/hier.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-hier.Tpo" "$(DEPDIR)/Gibbs-hier.Po"; else rm -f "$(DEPDIR)/Gibbs-hier.Tpo"; exit 1; fi
#	source='hier.c' object='Gibbs-hier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-hier.obj `if test -f 'hier.c'; then $(CYGPATH_W) 'hier.c'; else $(CYGPATH_W) '$(srcdir)/hier.c'; fi`

Gibbs-digammal.o: digammal.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-digammal.o -MD -MP -MF "$(DEPDIR)/Gibbs-digammal.Tpo" -c -o Gibbs-digammal.o `test -f 'digammal.c' || echo '$(srcdir)/'`digammal.c; \
	then mv -f "$(DEPDIR)/Gibbs-digammal.Tpo" "$(DEPDIR)/Gibbs-digammal.Po"; else rm -f "$(DEPDIR)/Gibbs-digammal.Tpo"; exit 1; fi
#	source='digammal.c' object='Gibbs-digammal.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-digammal.o `test -f 'digammal.c' || echo '$(srcdir)/'`digammal.c

Gibbs-digammal.obj: digammal.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -MT Gibbs-digammal.obj -MD -MP -MF "$(DEPDIR)/Gibbs-digammal.Tpo" -c -o Gibbs-digammal.obj `if test -f 'digammal.c'; then $(CYGPATH_W) 'digammal.c'; else $(CYGPATH_W) '$(srcdir)/digammal.c'; fi`; \
	then mv -f "$(DEPDIR)/Gibbs-digammal.Tpo" "$(DEPDIR)/Gibbs-digammal.Po"; else rm -f "$(DEPDIR)/Gibbs-digammal.Tpo"; exit 1; fi
#	source='digammal.c' object='Gibbs-digammal.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Gibbs_CFLAGS) $(CFLAGS) -c -o Gibbs-digammal.obj `if test -f 'digammal.c'; then $(CYGPATH_W) 'digammal.c'; else $(CYGPATH_W) '$(srcdir)/digammal.c'; fi`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	mkdir $(distdir)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e '1{h;s/./=/g;p;x;}' -e '$${p;x;}'
distuninstallcheck:
	@cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am am--refresh check check-am clean \
	clean-binPROGRAMS clean-generic ctags dist dist-all dist-bzip2 \
	dist-gzip dist-shar dist-tarZ dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-tags \
	distcleancheck distdir distuninstallcheck dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
